name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Extract tag name
        id: extract_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Build project
        run: |
          TAG_NAME=${{ steps.extract_tag.outputs.tag }}
          mkdir -p ./bin/versionizer-${TAG_NAME}-linux-amd64
          GOOS=linux GOARCH=amd64 go build -o ./bin/versionizer-${TAG_NAME}-linux-amd64/versionizer
          tar -czvf versionizer-${TAG_NAME}-linux-amd64.tar.gz -C ./bin versionizer-${TAG_NAME}-linux-amd64

          mkdir -p ./bin/versionizer-${TAG_NAME}-linux-arm64
          GOOS=linux GOARCH=arm64 go build -o ./bin/versionizer-${TAG_NAME}-linux-arm64/versionizer
          tar -czvf versionizer-${TAG_NAME}-linux-arm64.tar.gz -C ./bin versionizer-${TAG_NAME}-linux-arm64

          mkdir -p ./bin/versionizer-${TAG_NAME}-windows-amd64
          GOOS=windows GOARCH=amd64 go build -o ./bin/versionizer-${TAG_NAME}-windows-amd64/versionizer.exe
          tar -czvf versionizer-${TAG_NAME}-windows-amd64.tar.gz -C ./bin versionizer-${TAG_NAME}-windows-amd64

          mkdir -p ./bin/versionizer-${TAG_NAME}-darwin-amd64
          GOOS=darwin GOARCH=amd64 go build -o ./bin/versionizer-${TAG_NAME}-darwin-amd64/versionizer
          tar -czvf versionizer-${TAG_NAME}-darwin-amd64.tar.gz -C ./bin versionizer-${TAG_NAME}-darwin-amd64

          mkdir -p ./bin/versionizer-${TAG_NAME}-darwin-arm64
          GOOS=darwin GOARCH=arm64 go build -o ./bin/versionizer-${TAG_NAME}-darwin-arm64/versionizer
          tar -czvf versionizer-${TAG_NAME}-darwin-arm64.tar.gz -C ./bin versionizer-${TAG_NAME}-darwin-arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./versionizer-${{ steps.extract_tag.outputs.tag }}-linux-amd64.tar.gz
          asset_name: versionizer-${{ steps.extract_tag.outputs.tag }}-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./versionizer-${{ steps.extract_tag.outputs.tag }}-linux-arm64.tar.gz
          asset_name: versionizer-${{ steps.extract_tag.outputs.tag }}-linux-arm64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./versionizer-${{ steps.extract_tag.outputs.tag }}-windows-amd64.tar.gz
          asset_name: versionizer-${{ steps.extract_tag.outputs.tag }}-windows-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./versionizer-${{ steps.extract_tag.outputs.tag }}-darwin-amd64.tar.gz
          asset_name: versionizer-${{ steps.extract_tag.outputs.tag }}-darwin-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./versionizer-${{ steps.extract_tag.outputs.tag }}-darwin-arm64.tar.gz
          asset_name: versionizer-${{ steps.extract_tag.outputs.tag }}-darwin-arm64.tar.gz
          asset_content_type: application/gzip